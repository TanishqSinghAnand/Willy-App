{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\coding\\\\WirelessLibrary\\\\screens\\\\SearchScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport db from \"../config\";\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar Searchscreen = function (_React$Component) {\n  _inherits(Searchscreen, _React$Component);\n\n  function Searchscreen(props) {\n    var _this;\n\n    _classCallCheck(this, Searchscreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Searchscreen).call(this, props));\n\n    _this.fetchMoreTransaction = function _callee() {\n      var text, enteredText, query, _query;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              text = _this.state.search.toLowerCase();\n              enteredText = text.split(\"\");\n\n              if (!(enteredText[0].toLowerCase() === '')) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(db.collection(\"transaction\").where('bookId', '==', text).startAfter(_this.state.lastVisibleTransaction).limit(10).get());\n\n            case 5:\n              query = _context.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransaction: [].concat(_toConsumableArray(_this.state.allTransaction), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n              _context.next = 14;\n              break;\n\n            case 9:\n              if (!(enteredText[0].toLowerCase() === 'S')) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(db.collection(\"transaction\").where('bookId', '==', text).startAfter(_this.state.lastVisibleTransaction).limit(10).get());\n\n            case 12:\n              _query = _context.sent;\n\n              _query.docs.map(function (doc) {\n                _this.setState({\n                  allTransaction: [].concat(_toConsumableArray(_this.state.allTransaction), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.searchTransaction = function _callee2(text) {\n      var enteredText, transaction, _transaction;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              enteredText = text.split(\"\");\n\n              if (!(enteredText[0].toLowerCase() === 'b')) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"transaction\").where('bookId', '==', text).get());\n\n            case 4:\n              transaction = _context2.sent;\n              transaction.docs.map(function (doc) {\n                _this.setState({\n                  allTransaction: [].concat(_toConsumableArray(_this.state.allTransaction), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n              _context2.next = 13;\n              break;\n\n            case 8:\n              if (!(enteredText[0].toLowerCase() === 's')) {\n                _context2.next = 13;\n                break;\n              }\n\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(db.collection('transaction').where('studentId', '==', text).get());\n\n            case 11:\n              _transaction = _context2.sent;\n\n              _transaction.docs.map(function (doc) {\n                _this.setState({\n                  allTransaction: [].concat(_toConsumableArray(_this.state.allTransaction), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.componentDidMount = function _callee3() {\n      var query;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transaction\").limit(10).get());\n\n            case 2:\n              query = _context3.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransaction: [],\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      allTransaction: [],\n      lastVisibleTransaction: null,\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(Searchscreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }, React.createElement(View, {\n        style: styles.searchBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      }, React.createElement(TextInput, {\n        style: styles.bar,\n        placeholder: \"Enter Book Id or Student Id\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            search: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.searchTransaction(_this2.state.search);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, \"Search\"))), React.createElement(FlatList, {\n        data: this.state.allTransaction,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: {\n              borderBottomWidth: 2\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            }\n          }, \"Book Id: \" + item.bookId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            }\n          }, \"Student id: \" + item.studentId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            }\n          }, \"Transaction Type: \" + item.transactionType), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            }\n          }, \"Date: \" + item.date.toDate()));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReached: this.fetchMoreTransaction,\n        onEndReachedThreshold: 0.7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }));\n    }\n  }]);\n\n  return Searchscreen;\n}(React.Component);\n\nexport { Searchscreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20\n  },\n  searchBar: {\n    flexDirection: 'row',\n    height: 40,\n    width: 'auto',\n    borderWidth: 0.5,\n    alignItems: 'center',\n    backgroundColor: 'grey'\n  },\n  bar: {\n    borderWidth: 2,\n    height: 30,\n    width: 300,\n    paddingLeft: 10\n  },\n  searchButton: {\n    borderWidth: 1,\n    height: 30,\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"sources":["C:/coding/WirelessLibrary/screens/SearchScreen.js"],"names":["React","db","ScrollView","Searchscreen","props","fetchMoreTransaction","text","state","search","toLowerCase","enteredText","split","collection","where","startAfter","lastVisibleTransaction","limit","get","query","docs","map","doc","setState","allTransaction","data","searchTransaction","transaction","componentDidMount","styles","container","searchBar","bar","searchButton","item","borderBottomWidth","bookId","studentId","transactionType","date","toDate","index","toString","Component","StyleSheet","create","flex","marginTop","flexDirection","height","width","borderWidth","alignItems","backgroundColor","paddingLeft","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, FlatList, StyleSheet, TextInput, TouchableOpacity} from 'react-native';\nimport db from '../config'\nimport { ScrollView } from 'react-native-gesture-handler';\n\n\n\nexport default class Searchscreen extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        allTransaction: [],\n        lastVisibleTransaction: null,\n        search:''\n      }\n    }\n\n    fetchMoreTransaction = async ()=>{\n      var text = this.state.search.toLowerCase()\n      var enteredText = text.split(\"\")\n\n      \n      if (enteredText[0].toLowerCase() ===''){\n      const query = await db.collection(\"transaction\").where('bookId','==',text).startAfter(this.state.lastVisibleTransaction).limit(10).get()\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransaction: [...this.state.allTransaction, doc.data()],\n          lastVisibleTransaction: doc\n        })\n      })\n    }\n      else if(enteredText[0].toLowerCase() === 'S'){\n        const query = await db.collection(\"transaction\").where('bookId','==',text).startAfter(this.state.lastVisibleTransaction).limit(10).get()\n        query.docs.map((doc)=>{\n          this.setState({\n            allTransaction: [...this.state.allTransaction, doc.data()],\n            lastVisibleTransaction: doc\n          })\n        })\n      }\n  }\n\n    searchTransaction= async(text) =>{\n      var enteredText = text.split(\"\")  \n      if (enteredText[0].toLowerCase() ==='b'){\n        const transaction =  await db.collection(\"transaction\").where('bookId','==',text).get()\n        transaction.docs.map((doc)=>{\n          this.setState({\n            allTransaction:[...this.state.allTransaction,doc.data()],\n            lastVisibleTransaction: doc\n          })\n        })\n      }\n      else if(enteredText[0].toLowerCase() === 's'){\n        const transaction = await db.collection('transaction').where('studentId','==',text).get()\n        transaction.docs.map((doc)=>{\n          this.setState({\n            allTransaction:[...this.state.allTransaction,doc.data()],\n            lastVisibleTransaction: doc\n          })\n        })\n      }\n    }\n\n    componentDidMount = async ()=>{\n      const query = await db.collection(\"transaction\").limit(10).get()\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransaction: [],\n          lastVisibleTransaction: doc\n        })\n      })\n    }\n    render() {\n      return (\n        <View style={styles.container}>\n          <View style={styles.searchBar}>\n        <TextInput \n          style ={styles.bar}\n          placeholder = \"Enter Book Id or Student Id\"\n          onChangeText={(text)=>{this.setState({search:text})}}/>\n          <TouchableOpacity\n            style = {styles.searchButton}\n            onPress={()=>{this.searchTransaction(this.state.search)}}\n          >\n            <Text>Search</Text>\n          </TouchableOpacity>\n          </View>\n        <FlatList\n          data={this.state.allTransaction}\n          renderItem={({item})=>(\n            <View style={{borderBottomWidth: 2}}>\n              <Text>{\"Book Id: \" + item.bookId}</Text>\n              <Text>{\"Student id: \" + item.studentId}</Text>\n              <Text>{\"Transaction Type: \" + item.transactionType}</Text>\n              <Text>{\"Date: \" + item.date.toDate()}</Text>\n            </View>\n          )}\n          keyExtractor= {(item, index)=> index.toString()}\n          onEndReached ={this.fetchMoreTransaction}\n          onEndReachedThreshold={0.7}\n        /> \n        </View>\n      );\n    }\n  }\n\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      marginTop: 20\n    },\n    searchBar:{\n      flexDirection:'row',\n      height:40,\n      width:'auto',\n      borderWidth:0.5,\n      alignItems:'center',\n      backgroundColor:'grey',\n  \n    },\n    bar:{\n      borderWidth:2,\n      height:30,\n      width:300,\n      paddingLeft:10,\n    },\n    searchButton:{\n      borderWidth:1,\n      height:30,\n      width:50,\n      alignItems:'center',\n      justifyContent:'center',\n      backgroundColor:'green'\n    }\n  })"]},"metadata":{},"sourceType":"module"}