{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\coding\\\\WirelessLibrary\\\\screens\\\\loginScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as firebase from 'firebase';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this));\n\n    _this.login = function _callee(email, password) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(email && password)) {\n                _context.next = 21;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n            case 4:\n              response = _context.sent;\n\n              if (response) {\n                _this.props.navigation.navigate('Transaction');\n              }\n\n              _context.next = 19;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              _context.t1 = _context.t0.code;\n              _context.next = _context.t1 === 'auth/user-not-found' ? 13 : _context.t1 === 'auth/invalid-email' ? 16 : 19;\n              break;\n\n            case 13:\n              Alert.alert(\"user dosen't exists\");\n              console.log(\"doesn't exist\");\n              return _context.abrupt(\"break\", 19);\n\n            case 16:\n              Alert.alert('incorrect email or password');\n              console.log('invaild');\n              return _context.abrupt(\"break\", 19);\n\n            case 19:\n              _context.next = 22;\n              break;\n\n            case 21:\n              Alert.alert('enter email and password');\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    };\n\n    _this.state = {\n      emailId: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          alignItems: 'center',\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }, \"Wily\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }, React.createElement(TextInput, {\n        style: styles.loginBox,\n        placeholder: \"abc@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      }), React.createElement(TextInput, {\n        style: styles.loginBox,\n        secureTextEntry: true,\n        placeholder: \"enter Password\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 30,\n          width: 90,\n          borderWidth: 1,\n          marginTop: 20,\n          paddingTop: 5,\n          borderRadius: 7\n        },\n        onPress: function onPress() {\n          _this2.login(_this2.state.emailId, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }, \"Login\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  loginBox: {\n    width: 300,\n    height: 40,\n    borderWidth: 1.5,\n    fontSize: 20,\n    margin: 10,\n    paddingLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/coding/WirelessLibrary/screens/loginScreen.js"],"names":["React","firebase","LoginScreen","login","email","password","auth","signInWithEmailAndPassword","response","props","navigation","navigate","code","Alert","alert","console","log","state","emailId","alignItems","marginTop","textAlign","fontSize","styles","loginBox","text","setState","height","width","borderWidth","paddingTop","borderRadius","Component","StyleSheet","create","margin","paddingLeft"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;;IACqBC,W;;;AAEjB,yBAAa;AAAA;;AAAA;;AACT;;AADS,UAQXC,KARW,GAQL,iBAAMC,KAAN,EAAYC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACAD,KAAK,IAAIC,QADT;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAGuBJ,QAAQ,CAACK,IAAT,GAAgBC,0BAAhB,CAA2CH,KAA3C,EAAiDC,QAAjD,CAHvB;;AAAA;AAGMG,cAAAA,QAHN;;AAIA,kBAAGA,QAAH,EAAY;AACV,sBAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,aAA/B;AACD;;AAND;AAAA;;AAAA;AAAA;AAAA;AAAA,4BASQ,YAAMC,IATd;AAAA,8CAUO,qBAVP,wBAcO,oBAdP;AAAA;;AAAA;AAWIC,cAAAA,KAAK,CAACC,KAAN,CAAY,qBAAZ;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAZJ;;AAAA;AAeIH,cAAAA,KAAK,CAACC,KAAN,CAAY,6BAAZ;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAhBJ;;AAAA;AAAA;AAAA;;AAAA;AAsBAH,cAAAA,KAAK,CAACC,KAAN,CAAY,0BAAZ;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARK;;AAET,UAAKG,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAG,EADD;AAETb,MAAAA,QAAQ,EAAE;AAFD,KAAX;AAFS;AAMV;;;;6BA4BG;AAAA;;AACJ,aACE,oBAAC,oBAAD;AAAsB,QAAA,KAAK,EAAI;AAACc,UAAAA,UAAU,EAAC,QAAZ;AAAqBC,UAAAA,SAAS,EAAC;AAA/B,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE,QAAZ;AAAsBC,UAAAA,QAAQ,EAAE;AAAhC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADA,EAIA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACC,QADhB;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,YAAY,EAAE,eAHhB;AAIE,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAQ;AACpB,UAAA,MAAI,CAACC,QAAL,CAAc;AACZR,YAAAA,OAAO,EAAEO;AADG,WAAd;AAGD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAYA,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEF,MAAM,CAACC,QADhB;AAEE,QAAA,eAAe,EAAI,IAFrB;AAGE,QAAA,WAAW,EAAC,gBAHd;AAIE,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAQ;AACpB,UAAA,MAAI,CAACC,QAAL,CAAc;AACZrB,YAAAA,QAAQ,EAAEoB;AADE,WAAd;AAGD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,CAJA,EA2BA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAACE,UAAAA,MAAM,EAAC,EAAR;AAAWC,UAAAA,KAAK,EAAC,EAAjB;AAAoBC,UAAAA,WAAW,EAAC,CAAhC;AAAkCT,UAAAA,SAAS,EAAC,EAA5C;AAA+CU,UAAAA,UAAU,EAAC,CAA1D;AAA4DC,UAAAA,YAAY,EAAC;AAAzE,SAAzB;AACA,QAAA,OAAO,EAAE,mBAAI;AAAC,UAAA,MAAI,CAAC5B,KAAL,CAAW,MAAI,CAACc,KAAL,CAAWC,OAAtB,EAA+B,MAAI,CAACD,KAAL,CAAWZ,QAA1C;AAAoD,SADlE;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACgB,UAAAA,SAAS,EAAC;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,CA3BA,CADF;AAsCH;;;;EA3EsCrB,KAAK,CAACgC,S;;SAA1B9B,W;AA+ErB,IAAMqB,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,QAAQ,EACR;AACEI,IAAAA,KAAK,EAAE,GADT;AAEAD,IAAAA,MAAM,EAAE,EAFR;AAGAE,IAAAA,WAAW,EAAE,GAHb;AAIAP,IAAAA,QAAQ,EAAE,EAJV;AAKAa,IAAAA,MAAM,EAAC,EALP;AAMAC,IAAAA,WAAW,EAAC;AANZ;AAF+B,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport {View,Text,StyleSheet,Image,TextInput,TouchableOpacity,Alert,KeyboardAvoidingView} from 'react-native';\r\nimport * as firebase from 'firebase'\r\nexport default class LoginScreen extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n          emailId : '',\r\n          password: ''\r\n        }\r\n      }\r\n    \r\n      login=async(email,password)=>{\r\n        if (email && password){\r\n          try{\r\n            const response = await firebase.auth().signInWithEmailAndPassword(email,password)\r\n            if(response){\r\n              this.props.navigation.navigate('Transaction')\r\n            }\r\n          }\r\n          catch(error){\r\n            switch (error.code) {\r\n              case 'auth/user-not-found':\r\n                Alert.alert(\"user dosen't exists\")\r\n                console.log(\"doesn't exist\")\r\n                break\r\n              case 'auth/invalid-email':\r\n                Alert.alert('incorrect email or password')\r\n                console.log('invaild')\r\n                break\r\n            }\r\n          }\r\n        }\r\n        else{\r\n            Alert.alert('enter email and password');\r\n        }\r\n      }\r\n\r\n  render(){\r\n      return(\r\n        <KeyboardAvoidingView style = {{alignItems:'center',marginTop:20}}>\r\n        <View>\r\n          <Text style={{textAlign: 'center', fontSize: 30}}>Wily</Text>\r\n        </View>\r\n        <View>\r\n        <TextInput\r\n          style={styles.loginBox}\r\n          placeholder=\"abc@example.com\"\r\n          keyboardType ='email-address'\r\n          onChangeText={(text)=>{\r\n            this.setState({\r\n              emailId: text\r\n            })\r\n          }}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.loginBox}\r\n          secureTextEntry = {true}\r\n          placeholder=\"enter Password\"\r\n          onChangeText={(text)=>{\r\n            this.setState({\r\n              password: text\r\n            })\r\n          }}\r\n        />\r\n        </View>\r\n        <View>\r\n          <TouchableOpacity style={{height:30,width:90,borderWidth:1,marginTop:20,paddingTop:5,borderRadius:7}}\r\n          onPress={()=>{this.login(this.state.emailId ,this.state.password)}}>\r\n            <Text style={{textAlign:'center'}}>Login</Text>\r\n          </TouchableOpacity>\r\n\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n\r\n      )\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  loginBox:\r\n  {\r\n    width: 300,\r\n  height: 40,\r\n  borderWidth: 1.5,\r\n  fontSize: 20,\r\n  margin:10,\r\n  paddingLeft:10\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}