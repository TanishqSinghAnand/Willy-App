{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\coding\\\\WirelessLibrary\\\\screens\\\\loginScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport db from \"../config\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this));\n\n    _this.login = function _callee(email, password) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(email && password)) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n            case 4:\n              response = _context.sent;\n\n              if (response) {\n                _this.props.navigation.navigate('Transaction');\n              }\n\n              _context.next = 16;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              _context.t1 = _context.t0.code;\n              _context.next = _context.t1 === 'auth/user-not-found' ? 13 : _context.t1 === 'auth/invalid-email' ? 16 : 16;\n              break;\n\n            case 13:\n              Alert.alert('User doesnot exist');\n              console.log('doesnt exist');\n              return _context.abrupt(\"break\", 16);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]]);\n    };\n\n    _this.state = {\n      emailId: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Email\",\n        keyboardType: \"email-address\",\n        style: styles.loginBox,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Password\",\n        keyboardType: \"password\",\n        style: styles.loginBox,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.to,\n        onPress: function onPress() {\n          _this2.login(_this2.state.emailId, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  loginBox: {\n    width: '300',\n    height: 40,\n    borderWidth: 1.5,\n    fontSize: 20,\n    margin: '10',\n    paddingLeft: 10\n  },\n  to: {\n    backgroundColor: 'red',\n    width: 80,\n    alignSelf: \"center\",\n    alignContent: \"center\",\n    marginTop: 20,\n    borderRadius: 7,\n    border: 'solid'\n  },\n  text: {\n    color: \"yellow\",\n    alignSelf: \"center\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/coding/WirelessLibrary/screens/loginScreen.js"],"names":["React","db","LoginScreen","login","email","password","firebase","auth","signInWithEmailAndPassword","response","props","navigation","navigate","code","Alert","alert","console","log","state","emailId","styles","loginBox","text","setState","to","Component","StyleSheet","create","width","height","borderWidth","fontSize","margin","paddingLeft","backgroundColor","alignSelf","alignContent","marginTop","borderRadius","border","color","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, KeyboardAvoidingView, View, FlatList, StyleSheet, TextInput, TouchableOpacity , Alert} from 'react-native';\r\nimport db from '../config'\r\n\r\nexport default class LoginScreen extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state= {\r\n            emailId : '',\r\n            password:''\r\n        }\r\n    }\r\n    login = async(email,password) =>{\r\n        if(email && password){\r\n            try{\r\n                const response = await firebase.auth().signInWithEmailAndPassword(email, password)\r\n                if(response){\r\n                    this.props.navigation.navigate('Transaction')\r\n                }\r\n            }\r\n            catch(error) {\r\n                switch(error.code){\r\n                    case 'auth/user-not-found':\r\n                        Alert.alert('User doesnot exist')\r\n                        console.log('doesnt exist')\r\n                        break;\r\n                    case 'auth/invalid-email':\r\n                        \r\n                }\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <KeyboardAvoidingView>\r\n                <View >\r\n                    <TextInput \r\n                     placeholder=\"Email\"\r\n                     keyboardType='email-address'\r\n                     style={styles.loginBox}\r\n                     onChangeText={(text)=>{\r\n                        this.setState({\r\n                            emailId:text\r\n                        })\r\n                     }}\r\n                    />\r\n                    <TextInput \r\n                     placeholder=\"Password\"\r\n                     keyboardType='password'\r\n                     style={styles.loginBox}\r\n                     secureTextEntry={true}\r\n                     onChangeText={(text)=>{\r\n                        this.setState({\r\n                            password:text\r\n                        })\r\n                     }}\r\n                    />\r\n                    <TouchableOpacity \r\n                     style={styles.to}\r\n                     onPress={()=>{\r\n                         this.login(\r\n                            this.state.emailId,\r\n                            this.state.password\r\n                         )  \r\n                     }}\r\n                    >\r\n                        <Text style={styles.text}>\r\n                            Submit\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </KeyboardAvoidingView>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginBox:{\r\n        width: '300',\r\n        height:40,\r\n        borderWidth:1.5,\r\n        fontSize:20,\r\n        margin: '10',\r\n        paddingLeft:10,\r\n    },\r\n\r\n    to:{\r\n        backgroundColor:'red',\r\n        width:80,\r\n        alignSelf:\"center\",\r\n        alignContent:\"center\",\r\n        marginTop:20,\r\n        borderRadius:7,\r\n        border:'solid',\r\n\r\n    },\r\n    text:{\r\n        color:\"yellow\",\r\n        alignSelf:\"center\",\r\n        textAlign:\"center\"\r\n    }\r\n\r\n\r\n\r\n})"]},"metadata":{},"sourceType":"module"}