{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\coding\\\\WirelessLibrary\\\\screens\\\\SearchScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport db from \"../config\";\nimport firebase from 'firebase';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar Searchscreen = function (_React$Component) {\n  _inherits(Searchscreen, _React$Component);\n\n  function Searchscreen() {\n    var _this;\n\n    _classCallCheck(this, Searchscreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Searchscreen).call(this));\n\n    _this.componentDidMount = function _callee() {\n      var query;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(db.collection('transaction').get());\n\n            case 2:\n              query = _context.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: _toConsumableArray(_this.state.allTransactions.doc.data()),\n                  lastVisibleTrasaction: doc\n                });\n              });\n              console.log(_this.state.allTransactions);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.fetchMoreTransactions = function _callee2() {\n      var query;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(db.collection('transaction').startAfter(_this.state.lastVisibleTrasaction).limit(10).get());\n\n            case 2:\n              query = _context2.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: _toConsumableArray(_this.state.allTransactions)\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      allTransactions: [],\n      lastVisibleTrasaction: null\n    };\n    return _this;\n  }\n\n  _createClass(Searchscreen, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.state.allTransactions;\n      return React.createElement(FlatList, {\n        data: this.state.allTransactions,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            key: index,\n            style: {\n              flex: 1,\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            }\n          }, \"Book ID : \" + transaction.bookId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            }\n          }, \"Student ID : \" + transaction.studentId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            }\n          }, \"Transaction Type : \" + transaction.transactionType), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            }\n          }, \"Date : \" + transaction.date.toDate()));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        onEndReached: this.fetchMoreTransactions,\n        onEndReachedThreshold: 0.7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      });\n    }\n  }]);\n\n  return Searchscreen;\n}(React.Component);\n\nexport { Searchscreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  }\n});","map":{"version":3,"sources":["C:/coding/WirelessLibrary/screens/SearchScreen.js"],"names":["React","db","firebase","ScrollView","Searchscreen","componentDidMount","collection","get","query","docs","map","doc","setState","allTransactions","state","data","lastVisibleTrasaction","console","log","fetchMoreTransactions","startAfter","limit","item","index","flex","justifyContent","alignItems","transaction","bookId","studentId","transactionType","date","toDate","toString","Component","styles","StyleSheet","create","container","padding","fontSize","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View , FlatList  , Alert , StyleSheet } from 'react-native';\nimport db from '../config';\nimport firebase from 'firebase';\nimport {ScrollView } from 'react-native-gesture-handler'\nexport default class Searchscreen extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      allTransactions : [],\n      lastVisibleTrasaction:null\n    }\n  }\n\n  componentDidMount= async() =>{\n    const query = await  db.collection('transaction').get()\n    query.docs.map((doc)=>{\n      this.setState({allTransactions:[...this.state.allTransactions.doc.data()],\n      lastVisibleTrasaction:doc})\n    }\n    )\n    console.log(this.state.allTransactions)\n  }\n\n  fetchMoreTransactions = async()=>{\n    const query = await db.collection('transaction').startAfter(this.state.lastVisibleTrasaction).limit(10).get()\n    query.docs.map((doc)=>{\n      this.setState({allTransactions:[...this.state.allTransactions,]})\n    })\n  }\n\n\n    render() {\n      var data = this.state.allTransactions\n      return (\n        <FlatList\n          data={this.state.allTransactions}\n          renderItem={({item})=>( \n            <View key={index}  style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>{\"Book ID : \" + transaction.bookId }</Text>\n            <Text>{\"Student ID : \" + transaction.studentId }</Text>\n            <Text>{\"Transaction Type : \" + transaction.transactionType }</Text>\n            <Text>{\"Date : \" + transaction.date.toDate() }</Text>\n          </View> \n        )}\n          keyExtractor={(item,index)=>\n            index.toString()\n          }\n          onEndReached={this.fetchMoreTransactions}\n          onEndReachedThreshold={0.7}\n\n        >\n          \n        </FlatList>\n      );\n    }\n  }\n  \n  const styles = StyleSheet.create({  \n    container: {  \n        flex: 1,  \n    },  \n    item: {  \n        padding: 10,  \n        fontSize: 18,  \n        height: 44,  \n    },  \n})  \n"]},"metadata":{},"sourceType":"module"}