{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\coding\\\\WirelessLibrary\\\\screens\\\\BookTransactionScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase';\nimport db from \"../config\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionScreen).call(this));\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateBookReturn = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transcationType': \"return\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': true\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                'numberOfBooksIssued': firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                scannedBookId: \"\",\n                scannedStudentId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateBookIssue = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transcationType': \"issue\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': false\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                'numberOfBooksIssued': firebase.firestore.FieldValue.increment(1)\n              });\n              Alert.alert(\"Book Issued\");\n\n              _this.setState({\n                scannedBookId: \"\",\n                scannedStudentId: \"\"\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleTransaction = function _callee5() {\n      var transactionMessage;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              transactionMessage = null;\n              db.collection(\"books\").doc(_this.state.scannedBookId).get().then(function (doc) {\n                console.log(doc.data());\n                var book = doc.data();\n\n                if (book.bookAvailability) {\n                  _this.initiateBookIssue();\n\n                  transactionMessage = \"book issued\";\n                  ToastAndroid.show(transactionMessage, ToastAndroid.SHORT);\n                } else {\n                  _this.initiateBookReturn();\n\n                  transactionMessage = \"book returned\";\n                  ToastAndroid.show(transactionMessage, ToastAndroid.SHORT);\n                }\n              });\n\n              _this.setState({\n                transactionMessage: transactionMessage\n              });\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          }\n        }, React.createElement(TextInput, {\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              scannedBookId: text\n            });\n          },\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          }\n        }, React.createElement(TextInput, {\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function _callee6() {\n            var transactionMeassage;\n            return _regeneratorRuntime.async(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    transactionMeassage = _this2.handleTransaction();\n\n                    _this2.setState({\n                      scannedBookId: '',\n                      scannedStudentId: ''\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  }\n});","map":{"version":3,"sources":["C:/coding/WirelessLibrary/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","initiateBookReturn","collection","add","firestore","Timestamp","now","toDate","doc","update","FieldValue","increment","initiateBookIssue","Alert","alert","handleTransaction","transactionMessage","get","then","console","log","book","bookAvailability","ToastAndroid","show","SHORT","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","text","inputBox","scanButton","buttonText","transactionMeassage","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Image, StyleSheet, Alert , KeyboardAvoidingView, ToastAndroid } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase'\nimport db from '../config';\n\nexport default class TransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId: '',\n        scannedStudentId:'',\n        buttonState: 'normal',\n        transactionMessage : \"\"\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n\n      if(buttonState===\"BookId\"){\n        this.setState({\n          scanned: true,\n          scannedBookId: data,\n          buttonState: 'normal'\n        });\n      }\n      else if(buttonState===\"StudentId\"){\n        this.setState({\n          scanned: true,\n          scannedStudentId: data,\n          buttonState: 'normal'\n        });\n      }\n      \n    }\n\n    initiateBookReturn = async() =>{\n\n      db.collection(\"transaction\").add({\n        'studentId' : this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date': firebase.firestore.Timestamp.now().toDate(),\n        'transcationType': \"return\"\n      })\n      db.collection(\"books\").doc(\n        this.state.scannedBookId\n      ).update({\n        'bookAvailability':true\n      })\n      db.collection(\"students\").doc(this.state.scannedStudentId).update({\n        'numberOfBooksIssued' : firebase.firestore.FieldValue.increment(-1)\n      })\n      this.setState({\n        scannedBookId:\"\",\n        scannedStudentId:\"\"\n      })\n    }\n\n\n\n    initiateBookIssue = async() =>{\n\n      db.collection(\"transaction\").add({\n        'studentId' : this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date': firebase.firestore.Timestamp.now().toDate(),\n        'transcationType': \"issue\"\n      })\n      db.collection(\"books\").doc(\n        this.state.scannedBookId\n      ).update({\n        'bookAvailability':false\n      })\n      db.collection(\"students\").doc(this.state.scannedStudentId).update({\n        'numberOfBooksIssued' : firebase.firestore.FieldValue.increment(1)\n      })\n      Alert.alert(\"Book Issued\")\n      this.setState({\n        scannedBookId:\"\",\n        scannedStudentId:\"\"\n      })\n    }\n\n    handleTransaction = async() =>{\n\n\n      var transactionMessage  = null;\n      db.collection(\"books\").doc(this.state.scannedBookId).get()\n      .then((doc)=>{\n        console.log(doc.data());\n        var book = doc.data()\n        if(book.bookAvailability){\n          this.initiateBookIssue();\n          transactionMessage = \"book issued\"\n          ToastAndroid.show(transactionMessage,ToastAndroid.SHORT)\n        }\n        else {\n          this.initiateBookReturn();\n          transactionMessage = \"book returned\"\n          ToastAndroid.show(transactionMessage,ToastAndroid.SHORT)\n        }\n\n      })\n      this.setState({\n        transactionMessage:transactionMessage,\n      })\n\n\n    }\n\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <KeyboardAvoidingView style={styles.container}>\n            <View>\n              <Image\n                source={require(\"../assets/booklogo.jpg\")}\n                style={{width:200, height: 200}}/>\n              <Text style={{textAlign: 'center', fontSize: 30}}>Wily</Text>\n            </View>\n            <View style={styles.inputView}>\n            <TextInput \n              onChangeText={text => {\n                this.setState({scannedBookId:text})\n              }}\n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              value={this.state.scannedBookId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n            <View style={styles.inputView}>\n            <TextInput \n              onChangeText={text => {\n                this.setState({scannedStudentId:text})\n              }}\n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              value={this.state.scannedStudentId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"StudentId\")\n\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n            <TouchableOpacity style={styles.scanButton} onPress={async() => { \n            var transactionMeassage = this.handleTransaction();\n            this.setState({scannedBookId:'' , scannedStudentId : ''})\n\n            }} ><Text style={styles.buttonText}>Submit</Text></TouchableOpacity>\n          </KeyboardAvoidingView>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    }\n  });"]},"metadata":{},"sourceType":"module"}